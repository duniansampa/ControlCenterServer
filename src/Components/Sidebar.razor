@implements IDisposable
@using BlazorStrap 
@inject NavigationManager NavigationManager


<div class="adx-sidebar-wrapper">
    <BSNavbar Class="adx-sidebar-navbar">
        <BSNavbarBrand Class="adx-logo" href="/" >
            <img class="adx-logo-text adx-logo-mini" src="/images/react-logo.png" alt="Control Center Logo" />
            <p class="adx-logo-text adx-logo-normal">Control Center</p>
        </BSNavbarBrand>
        <BSNav IsList="true" IsVertical="true">
            @foreach (var parent in Routes)
            {
                var hasSubItem = parent.SubItems is not null;
                <BSNavItem @key="parent">
                    @if (!hasSubItem)
                    {
                        <BSNavLink Href="@(hasSubItem? null : parent.Path)">
                            <i class="@parent.Icon" aria-hidden="true" />
                            <p>@parent.Name</p>
                        </BSNavLink>
                    }
                    else
                    {
                        <BSCollapseItem>
                            <BSCollapseToggle IsLink="true" Class="nav-item nav-link" collapsible="@true">
                                <i class="@parent.Icon" aria-hidden="true" /> 
                                <p>@parent.Name</p>
                                <i class="fas @(parent.State ? "fa-caret-down": "fa-caret-right") caret-small" />
                            </BSCollapseToggle>
                            <BSCollapse @bind-IsOpen="parent.State">
                                <BSNav IsList="true" IsVertical="true">
                                    @foreach (var child in parent.SubItems)
                                    {
                                        <BSNavItem>
                                            <BSNavLink Href="@child.Path" @key="child">
                                                <span class="adx-mini-icon">@child.Mini</span>
                                                <span class="adx-normal-icon">
                                                    <p>@child.Name</p>                                                    
                                                </span>
                                            </BSNavLink>
                                        </BSNavItem>
                                    }
                                </BSNav>
                            </BSCollapse>
                        </BSCollapseItem>
                    }
                </BSNavItem>
            }
        </BSNav>
    </BSNavbar>
</div>

@code { 
    [Inject] public IJSRuntime JS { get; set; }
    [Parameter] public bool SidebarMini { get; set; }

    [Parameter]
    public EventCallback<bool> SidebarMiniChanged { get; set; }

    protected override void OnInitialized()
    {
        if (NavigationManager.BaseUri == NavigationManager.Uri)
            NavigationManager.NavigateTo("/home");

        base.OnInitialized();
    }
    
    protected override async Task OnAfterRenderAsync (bool firstRender)
    {   if(firstRender)
           await JS.InvokeVoidAsync("perfectScrollbarCreate", ".adx-sidebar-wrapper");
    }

    void IDisposable.Dispose()
    {
    }

    IEnumerable<RouteItem> Routes = new[]
    {
        new RouteItem
        {
            Name = "INÍCIO",
            Path = "/home",
            Icon = "fas fa-home",
        },
        new RouteItem
        {
            Name = "PAINEL",
            Path = "/dashboard",
            Icon = "fas fa-signal",
        },

        new RouteItem{
            Name = "ATIVIDADE",
            Icon = "fas fa-running",
            SubItems = new []{
                new RouteItem{
                    Name = "EM ANDAMENTO",
                    Path = "/activity/inprogress",
                    Mini = "E",
                },
                new RouteItem{
                    Name = "HISTÓRICO",
                    Path = "/activity/historical",
                    Mini = "H",
                }
            }
        },

        new RouteItem{
            Name = "BOTS",
            Icon = "fas fa-robot",
            SubItems = new []{
                new RouteItem{
                    Name = "MEUS BOTS",
                    Path = "/bots/mybots",
                    Mini = "B",
                },
                new RouteItem{
                    Name = "CREDENCIAIS",
                    Path = "/bots/credentials",
                    Mini = "C",
                },
                new RouteItem{
                    Name = "VALORES GLOBAIS",
                    Path = "/bots/globalvalues",
                    Mini = "V",
                }
            }
        },

        new RouteItem{
            Name = "DISPOSITIVOS",
            Icon = "fas fa-laptop",
            SubItems = new []{
                new RouteItem{
                    Name = "MEUS DISPOSITIVOS",
                    Path = "/device/mydevices",
                    Mini = "M",
                },
                new RouteItem{
                    Name = "GRUPO DE DISPOSITIVOS",
                    Path = "/device/devicegroups",
                    Mini = "G",
                },
            }
        },

        new RouteItem{
            Name = "ADMINISTRAÇÃO",
            Icon = "fas fa-cog",
            SubItems = new []{
                new RouteItem{
                    Name = "USUÁRIOS",
                    Path = "/admin/users",
                    Mini = "U",
                },
                new RouteItem{
                    Name = "TIMES",
                    Path = "/admin/teams",
                    Mini = "T",
                },
            }
        },

        new RouteItem{
            Name = "CONFIGURAÇÕES",
            Path = "/settings",
            Icon = "fas fa-user",
        },
    };
}
